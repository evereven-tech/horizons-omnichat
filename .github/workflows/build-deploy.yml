# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Build and Deploy Documentation

on:
    # Runs on pushes targeting the doc branch
  push:
    branches: ["gh-pages"]

    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
# Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build documentation
        run: |
          # Usando el mismo contenedor Jekyll que se usa en el Makefile
          docker run --rm \
            -v "${{ github.workspace }}:/srv/jekyll:rw,Z" \
            -e JEKYLL_ROOTLESS=1 \
            mcr.microsoft.com/devcontainers/jekyll:latest \
            jekyll build --config /srv/jekyll/_config.yml --source /srv/jekyll/docs --destination /srv/jekyll/_site
     
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: _site/
          retention-days: 1
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
